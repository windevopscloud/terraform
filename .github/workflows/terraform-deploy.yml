name: Deploy Terraform

on:
  workflow_dispatch:
    inputs:
      target_folder:
        description: "Select the Terraform folder to run IaC"
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - s3-static-website
          - 2tier-architecture

  pull_request_review:
    types: [submitted]
  push:
    branches:
      - main

jobs:
  terraform_plan:
    name: Plan Terraform Job
    if: github.event.review.state == 'approved' && github.event_name == 'pull_request_review'
    runs-on: ubuntu-latest

    steps:
      # Pulls the latest version of your code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Installs Terraform on the GitHub runner
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      # Configures your AWS access by using the credentials stored in GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
      
      # Check aws connection and user identity
      - name: Verify AWS CLI
        run: aws sts get-caller-identity

      # Run TFLint using official action
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1

      - name: Run TFLint
        run: tflint --chdir=${{ vars.target_folder }}

      # Run tfsec using official action
      - name: Run tfsec Scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working_directory: ${{ vars.target_folder }}

      # Initialize terraform
      - name: Initialize Terraform
        run: terraform -chdir=${{ vars.target_folder }} init

      - name: Terraform Format Check
        run: terraform -chdir=${{ vars.target_folder }} fmt -check

      - name: Terraform Validate
        run: terraform -chdir=${{ vars.target_folder }} validate

      - name: Terraform Plan
        run: terraform -chdir=${{ vars.target_folder }} plan

  terraform_apply:
    name: Apply Terraform Job
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # Pulls the latest version of your code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Installs Terraform on the GitHub runner
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      # Configures your AWS access by using the credentials stored in GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      # Check aws connection and user identity
      - name: Verify AWS CLI
        run: aws sts get-caller-identity

      # Initialize terraform
      - name: Initialize Terraform
        run: terraform -chdir=${{ vars.target_folder }} init

      - name: Terraform Apply
        run: terraform -chdir=${{ vars.target_folder }} apply -auto-approve